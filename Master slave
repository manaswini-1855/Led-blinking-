include <stdio.h>
#include <LPC17xx.h>

void init_SPI(void);
uint8_t WR_RD(uint8_t data);
void init_UART(void);


void init_SPI(){
    //POWER ON:ALWAYS ON
    //CLOCK:25M Hz
//PIN SELECT
    LPC_PINCON->PINSEL1|= 0x3C;//P0.17 ->MISO AND P0.18-> MOSI
    LPC_PINCON->PINSEL0|= 3<<30;
    LPC_SPI->SPCR =(1<<5);// ENABLE MASTER MODE
    LPC_SPI->SPCCR=40;//SPI_CLK=100K
}

uint8_t WR_RD(uint8_t data){
    
    LPC_SPI->SPDR = data;// sending data
    while(!(LPC_SPI->SPSR & (1<<7)));//WAIT FOR SPI FLAG
    return LPC_SPI->SPDR;//Reading the data
}
void UART0_Init(void) {
    LPC_SC->PCONP |= (1 << 3);             // Power up UART0 (bit 3 of PCONP)
    LPC_PINCON->PINSEL0 |= (1 << 4) | (1 << 6); // Set P0.2 as TXD0 and P0.3 as RXD0
    LPC_UART0->LCR = (1 << 7) | (1 << 1) | (1 << 0); // 8-bit data, no parity, 1 stop bit, DLAB = 1
    LPC_UART0->DLM = 0;                    // Set baud rate divisor (MSB)
    LPC_UART0->DLL = 162;                  // Set baud rate divisor (LSB, 162 for 9600 bps at 12 MHz PCLK)
    LPC_UART0->LCR = (1 << 1) | (1 << 0);  // Disable DLAB, keep 8-bit data format
   
}
void UART0_SendString(char *str) {
    while (*str) {
        while (!(LPC_UART0->LSR & 0x20));  // Wait for THR to be empty
        LPC_UART0->THR = *str++;           // Transmit character
    }
}

int main(){
    UART0_Init();
    char buf[50];
  init_SPI();
            UART0_SendString("start\n");


  uint8_t k = WR_RD(0x4A);
    sprintf(buf,"Return value:%x\n",k);
    UART0_SendString(buf);
        //for(int i=0;i<100000;i++);
    
}
